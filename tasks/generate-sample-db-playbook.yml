---
- name: Generate a sample table with 1 million rows.
  community.postgresql.postgresql_query:
    db: '{{POSTGRES_DB}}'
    port: '{{POSTGRES_PORT}}'
    login_user: '{{POSTGRES_USER}}'
    login_password: '{{POSTGRES_PASSWORD}}'
    login_host: '{{POSTGRES_LOCAL_HOST}}'
    path_to_script: "{{ stock_app_dir }}/sql/generate_1m.sql"
#    query: SELECT * FROM random1m;
    as_single_query: yes
  register: output

- debug:
    var: output


- name: Get a total number of generated rows.
  community.postgresql.postgresql_query:
    db: '{{POSTGRES_DB}}'
    port: '{{POSTGRES_PORT}}'
    login_user: '{{POSTGRES_USER}}'
    login_password: '{{POSTGRES_PASSWORD}}'
    login_host: '{{POSTGRES_LOCAL_HOST}}'
    query: SELECT COUNT(*) FROM random1m;
  register: out

- debug:
    var: out

- name: Check there are 1 million rows are genrated.
  assert:
    that:
    - out.query_result[0].count|int == 1000000
    fail_msg: "Number of COUNT(*) FROM our table is not 1000000"
    success_msg: "There are exact 1000000 rows exist in our table."
